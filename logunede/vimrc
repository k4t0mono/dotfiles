" Vim config file
" KatoMono 2019-Feb

" General stuff
let mapleader=","
syntax enable

set number
set showcmd
set showmatch

set wildmenu

set nobackup
set noswapfile

set hlsearch		" Higlight all search results
set smartcase
set ignorecase		" Search is case-insensitive
set incsearch		" Search incrementally
nnoremap <leader><space> :nohlsearch<CR>

set autoindent
set tabstop=4
set shiftwidth=4
set softtabstop=4
set noexpandtab
set smartindent
set smarttab
set so=10

filetype indent on

set undolevels=1000
set backspace=indent,eol,start

set splitbelow
set splitright

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-fugitive'
Plug 'scrooloose/nerdtree'
Plug 'xuyuanp/nerdtree-git-plugin'
Plug 'scrooloose/nerdcommenter'
Plug 'airblade/vim-gitgutter'

Plug 'itchyny/lightline.vim'
Plug 'dracula/vim', { 'as': 'dracula' }

Plug 'vimwiki/vimwiki'
Plug 'jamessan/vim-gnupg'

call plug#end()

" Git fugitive config
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gc :Gcommit<CR>

" NERDTree config
let g:NERDTreeWinPos = "left"
let NERDTreeShowHidden=0
let NERDTreeIgnore = ['\.pyc$', '__pycache__', 'node-modules']
let g:NERDTreeWinSize=35
let NERDTreeQuitOnOpen=0
map <leader>nn :NERDTreeToggle<cr>
map <leader>nb :NERDTreeFromBookmark<Space>
map <leader>nf :NERDTreeFind<cr>

" DelimitMate config
let delimitMate_matchpairs = "(:),[:],{:}"

" LightLine config
set laststatus=2
set noshowmode
let g:lightline = { 'colorscheme': 'wombat' }

" Racer
set hidden
let g:racer_cmd = "$HOME/.cargo/bin/racer"
let g:racer_experimental_completer = 1
au FileType rust nmap <leader>rx <Plug>(rust-doc)
au FileType rust nmap <leader>rd <Plug>(rust-def)
au FileType rust nmap <leader>rs <Plug>(rust-def-split)

let g:deoplete#enable_at_startup = 1
inoremap <silent><expr> <Tab> pumvisible() ? "\<C-n>" : "\<C-i>"

" Dracula
"colorscheme dracula
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%81v.\+/

